-- [회원] 정보 조회
SELECT 
	   A.ID
  	 , A.EMAIL
  	 , A.NICKNAME
  	 , B.NAME
  	 , A.POINT
  	 , COUNT(C.ATTEND_AT)
  	 , A.CREATED_AT
  FROM MEMBER A
  JOIN MEMBER_RANK B ON A.RANK_ID = B.ID
  JOIN MEMBER_ATTENDANCE_HISTORY C ON A.ID = C.MEMBER_ID
 WHERE A.ID = 2;

-- [회원] 추천 게시물 조회 (알고리즘 학습, 문제 풀이, 취업 정보 공유 )
SELECT
	   A.ID,
	   CASE 
		   WHEN A.ALGO_POST_ID IS NOT NULL THEN 'ALGO' 
		   WHEN A.CODING_POST_ID IS NOT NULL THEN 'CODING' 
		   WHEN A.CAREER_INFO_POST_ID IS NOT NULL THEN 'CAREER' 
	   END AS BOARD_TYPE, 
	   COALESCE(A.ALGO_POST_ID, A.CODING_POST_ID, A.CAREER_INFO_POST_ID) AS post_id,
	   CASE 
	       WHEN A.ALGO_POST_ID IS NOT NULL THEN B.TITLE
	       WHEN A.CODING_POST_ID IS NOT NULL THEN C.TITLE
	       WHEN A.CAREER_INFO_POST_ID IS NOT NULL THEN D.TITLE
	   END AS POST_TITLE
  FROM LIKES A
  LEFT JOIN ALGO_POST B ON A.ALGO_POST_ID = B.ID
  LEFT JOIN CODING_POST C ON A.CODING_POST_ID = C.ID
  LEFT JOIN CAREER_INFO_POST D ON A.CAREER_INFO_POST_ID = D.ID
 WHERE A.MEMBER_ID = 1;

-- [관리자] 전체 회원 조회
SELECT 
       A.ID
  	 , A.EMAIL
  	 , A.NICKNAME
  	 , B.NAME
  	 , A.POINT
  	 , A.REPORTED_COUNT
  	 , A.STATUS
  	 , A.CREATED_AT
  FROM MEMBER A
  JOIN MEMBER_RANK B ON A.RANK_ID = B.ID;